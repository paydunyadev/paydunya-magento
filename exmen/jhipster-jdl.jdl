application {
  config {
    baseName gateway,
    packageName com.okta.developer.gateway,
    applicationType gateway,
    authenticationType oauth2,
    prodDatabaseType postgresql,
    serviceDiscoveryType eureka,
    testFrameworks [protractor]
  }
  entities Demande, Type
  
}

application {
  config {
    baseName demande,
    packageName com.okta.developer.blog,
    applicationType microservice,
    authenticationType oauth2,
    prodDatabaseType postgresql,
    serverPort 8081,
    serviceDiscoveryType eureka
  }
  entities Demande, Type
}

application {
  config {
    baseName partener,
    packageName com.okta.developer.blog,
    applicationType microservice,
    authenticationType oauth2,
    prodDatabaseType postgresql,
    serverPort 8081,
    serviceDiscoveryType eureka
  }
  entities Partener, Type
}

entity Demande {
  lastName String required minlength(3),
  firstName String required minlength(2),
  imagePiece ImageBlob
}

entity Type {
  title String required,
}
entity Partener {
  title String required,
}

relationship ManyToOne {
  Demande{user(login)} to User,
  Demande{Type(name)} to Type
}



paginate Demande, Type with infinite-scroll
microservice Demande, Type with demande
microservice Partener, Type with partener

// will be created under 'docker-compose' folder
deployment {
  deploymentType docker-compose
  appsFolders [gateway, demande,partener]
  dockerRepositoryName "jmicro"
  consoleOptions [zipkin]
}